% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformTable.R
\name{transformTable}
\alias{transformTable}
\title{Transform a \code{data.frame}}
\usage{
transformTable(table, trans_table, mapping_table, attach = TRUE,
  verbose = TRUE)
}
\arguments{
\item{table}{A \code{data.frame} that is a source to be transformed.}

\item{trans_table}{A \code{data.frame} with following columns: 'Field', 'Function_Name', and 'Order'.
See details below.}

\item{mapping_table}{A \code{data.frame} for mapping values character values.}

\item{attach}{Logical indicating if the new transformed data should be attached to the original source data.}

\item{verbose}{Do you want the deets?}
}
\description{
Transform a \code{data.frame}
}
\details{
The values in the \code{trans_table} indicate what column is being created, what function is being used
to create that column, and what order the columns will be created. The string under Function_Name needs to be
a function with two parameters: \code{table} and \code{mapping_table}. Those parameter values
will be passed on from the \code{transformTable} function. See the example below.
}
\examples{
head(airquality)

map <- data.frame(month_number = 1:12, month_name = month.name)

makeMonth <- function(table, mapping_table){
  table <- left_join(table, mapping_table, by = c("Month" = "month_number"))
    return(table[["month_name"]])
}

makeOzonePPM <- function(table, mapping_table){
  table <- table \%>\%
    mutate(ppm = Ozone/1000)
  return(table[["ppm"]])
}

transformations <- read.table(header = TRUE, stringsAsFactors = FALSE, text = '
Field      Function_Name  Order
Month_Name makeMonth      2
Ozone_ppm  makeOzonePPM   1
                              ')
air <- transformTable(airquality, transformations, map)

head(air)

air <- transformTable(airquality, transformations, map, attach = FALSE)

head(air)
}

